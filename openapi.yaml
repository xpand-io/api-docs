openapi: 3.0.3

info:
  title: Xpand API
  version: v2

tags:
  - name: Users
  - name: Offers
  - name: References

paths:
  /api/v1/offer_letters:
    get:
      tags:
        - Offers
      summary: "Fetch & search offer letters. Pass the query in 'filters' parameters using ids, offer_ids, user_ids and statuses."
      parameters:
        - name: filters[ids]
          in: query
          description: "Comma separated list of Xpand Offer IDs"
          schema:
            type: array
            items:
              type: string
              format: uuid
          explode: false
          example: "64891c74d5ee1bb16dfdafd8,64891e2ad5ee1bb16dfdafd9"
        - name: filters[offer_ids]
          in: query
          description: "Comma separated list of Client Offer IDs"
          schema:
            type: array
            items:
              type: string
              format: uuid
          explode: false
          example: "64891c74d5ee1bb16dfdafd8,64891e2ad5ee1bb16dfdafd9"
        - name: filters[user_ids]
          in: query
          description: "Comma separated list of Xpand User IDs"
          schema:
            type: array
            items:
              type: string
              format: uuid
          explode: false
          example: "64891c74d5ee1bb16dfdafd8,64891e2ad5ee1bb16dfdafd9"
        - name: filters[statuses]
          in: query
          description: "Comma separated list of Offer Statuses"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/OfferLetterStatus"
          explode: false
          example: "pending_initiation,pending_approval"
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          example: 7
      responses:
        "200":
          description: Successful responnse
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OfferLetterResponseFull"
    post:
      tags:
        - Offers
      summary: "Create or update an offer letter"
      responses:
        "200":
          description: Successful responnse
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/OfferLetterResponseSimple"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      $ref: "#/components/schemas/OfferLetterRequest"
  /api/v1/offer_letters/{id}:
    delete:
      tags:
        - Offers
      summary: Rescind an offer letter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Successful responnse
  /api/v1/references:
    post:
      tags:
        - References
  /api/v1/references/job_profiles:
    get:
      tags:
        - References
  /api/v1/references/office_locations:
    get:
      tags:
        - References
  /api/v1/users:
    get:
      tags:
        - Users
      summary: Fetch & search users Pass the query in 'filters' parameters using ids and emails.
      parameters:
        - name: filter[ids]
          in: query
          description: "Comma separated list of Xpand User IDs"
          schema:
            type: array
            items:
              type: string
              format: uuid
          explode: false
          example: "64891c74d5ee1bb16dfdafd8,64891e2ad5ee1bb16dfdafd9"
        - name: filter[emails]
          in: query
          description: "Comma separated list of User Emails"
          schema:
            type: array
            items:
              type: string
              format: email
          explode: false
          example: "john@example.com,jane@example.com"
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          example: 7
      responses:
        "200":
          description: Successful responnse
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserResponseFull"
    post:
      tags:
        - Users
      summary: Create a user
      responses:
        "200":
          description: Successful responnse
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UserResponseSimple"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      $ref: "#/components/schemas/UserRequest"
  /api/v1/users/{id}:
    get:
      tags:
        - Users
      summary: Fetch a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful responnse
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UserResponseFull"
    patch:
      tags:
        - Users
      summary: Update a user and pass within data and attributes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful responnse
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UserResponseSimple"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"

components:
  schemas:
    Address:
      type: object
      required:
        - city
        - country
      properties:
        line_1:
          type: string
          example: 31 St, 34 West
        line_2:
          type: string
          example: 8th Avenue
        line_3:
          type: string
        city:
          type: string
          example: New York
        state:
          type: string
          example: New York
        postal_code:
          type: string
          example: 100018
        country:
          type: string
          example: USA
        current:
          type: boolean
          example: true
        permanent:
          type: boolean
          example: true
        start_date:
          type: string
          format: date
          example: "2021-10-23"
        end_date:
          type: string
          format: date
          example: "2023-10-23"
        attachments:
          $ref: "#/components/schemas/Attachments"
    Addresses:
      type: array
      description: "Array which holds the collection of current and permanent address information"
      items:
        $ref: "#/components/schemas/Address"
    Attachment:
      type: object
      properties:
        file_name:
          type: string
          example: abc.pdf
        file_content_base64:
          type: string
          format: byte
          example: SGVsbG8gdGhlcmUgOi0pIEZpbmQgYW55dGhpbmcgZXhjaXRpbmc/
        responses:
          type: object
          description: Responses provided in PDF form fields (only present when attachment is a PDF with form fields)
          properties:
            field_name_1:
              type: string
              example: abc
            field_name_2:
              type: string
              example: cba
    Attachments:
      type: array
      items:
        $ref: "#/components/schemas/Attachment"
    Document:
      type: object
      properties:
        document_type:
          type: string
          example: offer_letter
        document_number:
          type: string
          example: 1234
        document_title:
          type: string
          example: Offer Letter
        document_description:
          type: string
          example: Offer Letter to the Joe
        issuer:
          type: string
          example: Issuer
        issuer_city:
          type: string
          example: New York
        issuer_state:
          type: string
          example: New York
        issuer_country:
          type: string
          example: USA
        issued_date:
          type: string
          format: date
          example: "2021-10-23"
        expiry_date:
          type: string
          format: date
          example: "2023-10-23"
        attachments:
          $ref: "#/components/schemas/Attachments"
    Documents:
      type: array
      description: "Array which holds the collection of document information"
      items:
        $ref: "#/components/schemas/Document"
    Education:
      type: object
      properties:
        school_name:
          type: string
          example: School Name
        degree:
          type: string
          example: Degree
        student_id:
          type: string
          example: 1001
        time_type:
          type: string
          example: Full Time
        major:
          type: string
          example: Communications
        minor:
          type: string
          example: Publications
        gpa:
          type: number
          format: float
          example: 4
        specialization:
          type: string
          example: IT
        graduation_date:
          type: string
          format: date
          example: "2021-10-23"
        grade:
          type: string
          example: A
        name_while_attending:
          type: string
          example: Jon Doe
        start_date:
          type: string
          format: date
          example: "2021-10-23"
        end_date:
          type: string
          format: date
          example: "2023-10-23"
        address:
          $ref: "#/components/schemas/Address"
        attachments:
          $ref: "#/components/schemas/Attachments"
    Educations:
      type: array
      description: "Array which holds the collection of education information"
      items:
        $ref: "#/components/schemas/Education"
    OfferLetterRequest:
      type: object
      required:
        - user_id
        - offer_id
        - job_application_id
        - office_location_id
        - start_date
      properties:
        user_id:
          type: string
          format: uuid
          description: "Unique ID of the user"
          example: "64892208d5ee1bb16dfdafda"
        offer_id:
          type: string
          description: "Unique ID of the Offer"
          example: "O3112-333"
        job_application_id:
          type: string
          description: "Unique ID of the Job Application"
          example: "J-O3112"
        office_location_id:
          type: object
          description: "JSON where key is name of external service, e.g. {'HRIS_ID': 'NEWYORK'. There must be an office location in Xpand with a matching employee id. See reference values here for existing office location external ids"
          properties:
            workday:
              type: string
              example: "LOCATION-3-69"
        start_date:
          type: string
          format: date
          description: "Start date of the new hire"
          example: "2023-10-23"
        legal_entity:
          type: string
          description: "See reference values here for existing legal entity values."
          example: "Xpand Limited"
        job_title:
          type: string
          description: "Job Title of the offer"
          example: "Steamboat Captain"
        currency:
          type: string
          description: "ISO 4217 Currency Code"
          example: USD
        base_salary:
          type: integer
          description: "Basic Salary"
          example: 45000
        end_date:
          type: string
          format: date
          description: "End date of the new hire"
          example: "2023-10-23"
        induction_date:
          type: string
          format: date
          description: "Induction Date"
          example: "2023-10-23"
        expiration_date:
          type: string
          format: date
          description: "Expiration date of an offer"
          example: "2023-10-23"
        offer_dispositioned:
          type: string
          description: "dispositioning the offer"
          example: "Y"
        campus:
          type: string
          example: "Y"
        compensation:
          type: integer
          description: "Total compensation of the offer (Base + Bonus + Allowes)"
          example: 100000
        non_compete_duration:
          type: integer
          example: 0
        supplemental_non_compete_duration:
          type: integer
          example: 1
        flsa_status:
          type: string
          description: "Exempt/Non-Exempt NY/CA wage forms"
          example: "Exempt"
        respond_by_date:
          type: string
          description: "Date by when action to be taken on offer"
          example: "2023-10-23"
        attorney_only:
          type: boolean
          example: true
        confidential:
          type: boolean
          example: true
        regulated:
          type: boolean
          example: true
        regulated_status:
          type: string
          example: "Active"
        smcr:
          type: boolean
          description: "identify if someone is Senior Manager"
          example: true
        job_profile_id:
          type: string
          example: "Job Family"
        business_unit_id:
          type: string
          example: "Business Unit"
        department_code:
          type: string
          example: "Department Code"
        position_type:
          type: string
          example: "Position Type"
        pay_rate:
          type: string
          example: "Pay Rate"
        job_level:
          type: string
          example: "Leval 1"
        cost_center_id:
          type: string
          example: "Cost Center"
        time_type:
          type: string
          example: "Full Time"
        employee_type:
          type: string
          example: "Regular"
        job_code:
          type: string
          example: "Engineer"
        target_salary:
          type: integer
          example: 10000
        max_salary:
          type: integer
          example: 100000
        rsu:
          type: integer
          example: 5000
        annual_bonus_percent:
          type: integer
          example: 10
        signing_bonus_amount:
          type: integer
          example: 7000
        commission_amount:
          type: integer
          example: 3000
        car_allowance:
          type: integer
          example: 1000
        relocation:
          type: boolean
          example: true
        relocation_flex_allowance:
          type: integer
          example: 2000
        work_from_home:
          type: boolean
          example: false
        immigration:
          type: boolean
          example: false
        visa_sponsorship_notes:
          type: string
          example: "Clear"
        urgent:
          type: boolean
          example: false
        is_exempt:
          type: boolean
          example: false
        notes:
          type: string
          example: Ready to send the offer
        documents:
          $ref: "#/components/schemas/Documents"
    OfferLetterResponseFull:
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
              example: "64891c74d5ee1bb16dfdafd8"
        - $ref: "#/components/schemas/OfferLetterRequest"
    OfferLetterResponseSimple:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "64891c74d5ee1bb16dfdafd8"
    OfferLetterStatus:
      type: string
      example: pending_approval
      enum:
        - pending_initiation
        - pending_approval
        - admin_approved
        - admin_rejected
        - candidate_pending
        - candidate_accepted
        - candidate_declined
        - rescinded
        - voided
    PhoneNumber:
      type: object
      properties:
        number:
          type: string
          description: "E.164 format"
          example: "+14044580998"
        type:
          type: string
          example: mobile
          enum:
            - mobile
            - landline
            - unknown
        primary:
          type: boolean
          example: true
    PhoneNumbers:
      type: array
      description: "Array which holds the collection of phone number information"
      items:
        $ref: "#/components/schemas/PhoneNumber"
    UserRequest:
      type: object
      required:
        - email
        - first_name
        - last_name
        - start_date
        - external_ids
        - office_location_id
        - candidate_status
        - cost_center_id
        - employee_type
        - recruiter_ids
      properties:
        email:
          type: string
          format: email
          example: "daniel@personal.com"
          description: "Must be a valid email address. Must be unique for each user. Non case-sensitive. Regex validation: ^(?!...)[a-zA-Z0-9][\\w-.]@[A-Za-z\\d-]+(.[A-Za-z\\d-]+)*.[A-Za-z]+$"
        work_email:
          type: string
          format: email
          description: "Must be a valid email address. Must be unique for each user. Non case-sensitive. Regex validation: ^(?!...)[a-zA-Z0-9][\\w-.]@[A-Za-z\\d-]+(.[A-Za-z\\d-]+)*.[A-Za-z]+$"
          example: "daniel@company.com"
        first_name:
          type: string
          description: "Must not contain numbers or any of the following special characters !@#$%^&*()"
          example: "Daniel"
        last_name:
          type: string
          description: "Must not contain numbers or any of the following special characters !@#$%^&*()"
          example: "Smith"
        middle_name:
          type: string
          description: "Must not contain numbers or any of the following special characters !@#$%^&*()"
          example: "Jones"
        start_date:
          type: string
          format: date
          description: "Format: YYYY-MM-DD. Can be present, or future dates only."
          example: "2023-09-08"
        employee_type:
          type: string
          description: "See reference values here for allowed employee type values."
          example: "Regular"
        candidate_status:
          type: string
          description: "See reference values here for allowed candidate status values."
          example: "offer_accepted"
        legal_entity:
          type: string
          description: "See reference values here for existing legal entity values."
          example: "Xpand Limited"
        cost_center_id:
          type: string
          description: "See reference values here for existing cost center values."
          example: "Cost Center"
        relocation_type:
          type: string
          description: "Allowes the relocation type values."
          example: "global_relocation"
        blocked:
          type: boolean
          description: "Disable or enable a user account in Xpand."
          example: false
        reason_blocked:
          type: string
          description: "A brief description of why the user why the user account is being disabled in Xpand"
          example: "inactive in ATS System"
        external_ids:
          type: object
          description: "This is the collection of unique id of the Applicant Tracking System (ATS) and employee id of the Human Resource Information Systems (HRIS)"
          properties:
            ats_id:
              type: string
              example: A-1234
            hris_id:
              type: string
              example: E-1234
        office_location_id:
          type: object
          description: "JSON where key is name of external service, e.g. {'HRIS_ID': 'NEWYORK'. There must be an office location in Xpand with a matching employee id. See reference values here for existing office location external ids"
          properties:
            workday:
              type: string
              example: "LOCATION-3-69"
        recruiter_ids:
          type: object
          description: "JSON where key is name of external service, e.g. {:recruiter=>{'HRIS_SYS'=>'12345'}, recruiting_manager=>{'HRIS_SYS'=>'56789'}} (There must be a recruiter in Xpand or HRIS_SYS(Ex: workday) with a matching employee id)"
          properties:
            recruiter:
              properties:
                hris_id:
                  type: string
                  example: R-1111
            recruiting_coordinator:
              properties:
                hris_id:
                  type: string
                  example: R-2222
            recruiting_manager:
              properties:
                hris_id:
                  type: string
                  example: R-3333
        manager_ids:
          type: object
          description: "JSON where key is name of external service, e.g. {'HRIS_SYS': ['123456', '45678']} (There must be a manager in Xpand or HRIS with a matching employee id)"
          properties:
            hris_id:
              type: array
              example: [M-1111, M-2222]
        documents:
          $ref: "#/components/schemas/Documents"
        educations:
          $ref: "#/components/schemas/Educations"
        work_experiences:
          $ref: "#/components/schemas/WorkExperiences"
        addresses:
          $ref: "#/components/schemas/Addresses"
        phone_numbers:
          $ref: "#/components/schemas/PhoneNumbers"
    UserResponseFull:
      type: object
      properties:
        id:
          type: string
          example: 64891c74d5ee1bb16dfdafd8
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john@example.com
        start_date:
          type: string
          format: date
          example: "2023-10-23"
        external_ids:
          type: object
          properties:
            ats_id:
              type: string
              example: A-1234
            hris_id:
              type: string
              example: E-1234
        office_location_id:
          type: object
          properties:
            workday:
              type: string
              example: "LOCATION-3-69"
        recruiter_ids:
          type: object
          properties:
            recruiter:
              properties:
                hris_id:
                  type: string
                  example: R-1111
            recruiting_coordinator:
              properties:
                hris_id:
                  type: string
                  example: R-2222
            recruiting_manager:
              properties:
                hris_id:
                  type: string
                  example: R-3333
        manager_ids:
          type: object
          properties:
            hris_id:
              type: array
              example: [M-1111, M-2222]
        documents:
          $ref: "#/components/schemas/Documents"
        educations:
          $ref: "#/components/schemas/Educations"
        work_experiences:
          $ref: "#/components/schemas/WorkExperiences"
        addresses:
          $ref: "#/components/schemas/Addresses"
        phone_numbers:
          $ref: "#/components/schemas/PhoneNumbers"
    UserResponseSimple:
      type: object
      properties:
        id:
          type: string
          example: 64891c74d5ee1bb16dfdafd8
    WorkExperience:
      type: object
      properties:
        employer:
          type: string
          example: Employer
        employee_id:
          type: string
          example: E1234
        current:
          type: boolean
          example: true
        job_title:
          type: string
          example: Engineer
        department:
          type: string
          example: Department
        employment_type:
          type: string
          example: Regular
        reason_for_leaving:
          type: string
          example: Change in technology
        salary:
          type: integer
          example: 10000
        manager_name:
          type: string
          example: Manager 1
        manager_phone:
          type: string
          example: "+14044578776"
        manager_email:
          type: string
          format: email
          example: manager@xpand.io
        hr_name:
          type: string
          example: HR 1
        hr_phone:
          type: string
          example: +1 4044578777
        hr_email:
          type: string
          format: email
          example: hr@xpand.io
        start_date:
          type: string
          format: date
          example: "2021-10-23"
        end_date:
          type: string
          format: date
          example: "2023-10-23"
        address:
          $ref: "#/components/schemas/Address"
        attachments:
          $ref: "#/components/schemas/Attachments"
    WorkExperiences:
      type: array
      description: "Array which holds the collection of work experience information"
      items:
        $ref: "#/components/schemas/WorkExperience"
